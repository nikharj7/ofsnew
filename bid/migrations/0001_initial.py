# Generated by Django 4.1.7 on 2023-03-13 06:05

import bid.models
from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_vendor', models.BooleanField(default=False)),
                ('is_customer', models.BooleanField(default=False)),
                ('email', models.EmailField(max_length=75, unique=True)),
                ('username', models.CharField(max_length=75)),
                ('email_verified', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Image1', models.ImageField(blank=True, null=True, upload_to='Home/Banner')),
                ('Image2', models.ImageField(blank=True, null=True, upload_to='Home/Banner')),
                ('Image3', models.ImageField(blank=True, null=True, upload_to='Home/Banner')),
                ('Image4', models.ImageField(blank=True, null=True, upload_to='Home/Banner')),
            ],
        ),
        migrations.CreateModel(
            name='Bid',
            fields=[
                ('product_image', models.ImageField(blank=True, null=True, upload_to='Vendor/Product_Image')),
                ('Bid_id', models.AutoField(primary_key=True, serialize=False)),
                ('customer_id', models.CharField(max_length=25)),
                ('vendor_id', models.CharField(max_length=25)),
                ('requirement_id', models.IntegerField()),
                ('name', models.CharField(max_length=255, verbose_name='Product')),
                ('bid_rate', models.DecimalField(decimal_places=2, max_digits=10)),
                ('mrp', models.DecimalField(decimal_places=2, max_digits=10)),
                ('quantity', models.IntegerField()),
                ('expected_delivery', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(90)])),
                ('product_expiry', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('supply_pincode', models.IntegerField()),
                ('amount', models.FloatField(verbose_name='Amount')),
                ('payment_id', models.CharField(max_length=36, verbose_name='Payment ID')),
                ('provider_order_id', models.CharField(max_length=40, verbose_name='Order ID')),
                ('signature_id', models.CharField(max_length=128, verbose_name='Signature ID')),
                ('PaymentStatus', models.CharField(choices=[('SUCCESS', 'SUCCESS'), ('FAILURE', 'FAILURE'), ('PENDING', 'PENDING')], default='PENDING', max_length=255)),
                ('From_Order4Sure', models.CharField(choices=[('YES', 'YES'), ('NO', 'NO')], default='NO', max_length=25)),
                ('complete', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Brands',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('image', models.FileField(blank=True, null=True, upload_to='Brands')),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'Brands',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='Brands')),
                ('name', models.CharField(max_length=50)),
                ('slug', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'category',
                'verbose_name_plural': 'categories',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Completed_Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice', models.FileField(blank=True, null=True, upload_to='Complete_Order/Invoice')),
                ('customer_id', models.CharField(max_length=50)),
                ('vendor_id', models.CharField(max_length=50)),
                ('requirement_id', models.IntegerField()),
                ('bid_id', models.IntegerField()),
                ('name', models.CharField(max_length=255, verbose_name='Product')),
                ('quantity', models.IntegerField()),
                ('pincode', models.IntegerField()),
                ('order_amount', models.IntegerField()),
                ('expected_delivery', models.DateField()),
                ('delivery_contact', models.IntegerField()),
                ('delivery_address', models.TextField(default=None)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('order_status', models.CharField(default='Complete', max_length=255)),
                ('customer_payment_status', models.CharField(default='Complete', max_length=255)),
                ('vendor_payment_status', models.CharField(default='Complete', max_length=255)),
                ('customer_payment_image', models.FileField(blank=True, null=True, upload_to='Customer/Complete_Order_Payment')),
                ('invoice_uploaded', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'Complete Orders',
            },
        ),
        migrations.CreateModel(
            name='Contact_Us',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Email', models.CharField(max_length=255)),
                ('Name', models.CharField(max_length=255)),
                ('Subject', models.CharField(max_length=255)),
                ('Message', models.TextField()),
            ],
            options={
                'verbose_name_plural': 'Contact Us',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('order_id', models.AutoField(primary_key=True, serialize=False)),
                ('order_date', models.DateField()),
                ('customer_id', models.CharField(max_length=50)),
                ('vendor_id', models.CharField(max_length=50)),
                ('customer_name', models.CharField(max_length=50)),
                ('requirement_id', models.IntegerField(unique=True)),
                ('bid_id', models.IntegerField()),
                ('name', models.CharField(max_length=255, verbose_name='Product')),
                ('quantity', models.IntegerField()),
                ('pincode', models.IntegerField()),
                ('order_amount', models.IntegerField()),
                ('expected_delivery', models.DateField()),
                ('delivery_contact', models.IntegerField()),
                ('delivery_address', models.TextField(default=None)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('order_status', models.CharField(default='Active', max_length=255)),
                ('customer_payment_status', models.CharField(choices=[('NOT PAID', 'NOT PAID'), ('CHECKING FOR TRANSACTION', 'CHECKING FOR TRANSACTION'), ('TRANSACTION APPROVED', 'TRANSACTION APPROVED')], default='NOT PAID', max_length=255)),
                ('customer_payment_image', models.FileField(blank=True, null=True, upload_to='Customer/Order_Payment')),
                ('customer_payment_proof', models.BooleanField(default=False)),
                ('customer_payment_approved', models.BooleanField(default=False)),
                ('From_Order4Sure', models.CharField(choices=[('YES', 'YES'), ('NO', 'NO')], default='NO', max_length=25)),
                ('completed', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Order_From_Order4Sure',
            fields=[
                ('order_id', models.AutoField(primary_key=True, serialize=False)),
                ('invoice', models.FileField(blank=True, null=True, upload_to='Complete_Order/Store_Invoice')),
                ('order_date', models.DateField()),
                ('product_image', models.ImageField(blank=True, null=True, upload_to='Order/Add_to_Cart')),
                ('customer_id', models.CharField(max_length=50)),
                ('vendor_id', models.CharField(max_length=50)),
                ('customer_name', models.CharField(max_length=50)),
                ('name', models.CharField(max_length=255, verbose_name='Product')),
                ('quantity', models.IntegerField()),
                ('pincode', models.IntegerField()),
                ('order_amount', models.IntegerField()),
                ('GST', models.CharField(blank=True, max_length=50, null=True)),
                ('Drug', models.CharField(blank=True, max_length=50, null=True)),
                ('expected_delivery', models.DateField()),
                ('delivery_contact', models.IntegerField()),
                ('delivery_address', models.TextField(default=None)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('order_status', models.CharField(default='Active', max_length=255)),
                ('customer_payment_status', models.CharField(choices=[('NOT PAID', 'NOT PAID'), ('CHECKING FOR TRANSACTION', 'CHECKING FOR TRANSACTION'), ('TRANSACTION APPROVED', 'TRANSACTION APPROVED')], default='NOT PAID', max_length=255)),
                ('customer_payment_image', models.FileField(blank=True, null=True, upload_to='Customer/Order_Payment')),
                ('customer_payment_proof', models.BooleanField(default=False)),
                ('customer_payment_approved', models.BooleanField(default=False)),
                ('From_Order4Sure', models.CharField(choices=[('YES', 'YES'), ('NO', 'NO')], default='YES', max_length=25)),
                ('completed', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'From_Order4Sure',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Vendor', models.CharField(max_length=50)),
                ('image1', models.ImageField(blank=True, null=True, upload_to='Nirbhik_Products')),
                ('image2', models.ImageField(blank=True, null=True, upload_to='Nirbhik_Products')),
                ('image3', models.ImageField(blank=True, null=True, upload_to='Nirbhik_Products')),
                ('image4', models.ImageField(blank=True, null=True, upload_to='Nirbhik_Products')),
                ('image5', models.ImageField(blank=True, null=True, upload_to='Nirbhik_Products')),
                ('name', models.CharField(blank=True, max_length=500, null=True, verbose_name='Product')),
                ('price', models.IntegerField(blank=True, null=True)),
                ('mrp', models.IntegerField(blank=True, null=True)),
                ('GST', models.IntegerField(blank=True, null=True)),
                ('quantity', models.CharField(blank=True, max_length=8, null=True)),
                ('step_up_quantity', models.CharField(blank=True, max_length=8, null=True)),
                ('category', models.CharField(blank=True, max_length=500, null=True)),
                ('Brand', models.CharField(blank=True, max_length=50, null=True)),
                ('Length', models.CharField(blank=True, max_length=50, null=True, verbose_name='Length(cm)')),
                ('Width', models.CharField(blank=True, max_length=50, null=True, verbose_name='Width(cm)')),
                ('Height', models.CharField(blank=True, max_length=50, null=True, verbose_name='Height(cm)')),
                ('Weight', models.CharField(blank=True, max_length=50, null=True, verbose_name='Weight(kg)')),
                ('short_description', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('SKU', models.CharField(blank=True, max_length=255, null=True)),
                ('slug', models.TextField(blank=True, null=True)),
                ('in_stock', models.CharField(choices=[('YES', 'YES'), ('NO', 'NO')], default='YES', max_length=50)),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
            ],
        ),
        migrations.CreateModel(
            name='Vendor_brands',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand_interest', models.CharField(max_length=26)),
                ('vendor_id', models.CharField(max_length=25)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'Vendor Brands',
            },
        ),
        migrations.CreateModel(
            name='Vendor_category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_interest', models.CharField(max_length=26)),
                ('vendor_id', models.CharField(max_length=26)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'Vendor Categories',
            },
        ),
        migrations.CreateModel(
            name='vendor_products_file',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vendor_id', models.CharField(max_length=50)),
                ('productfile', models.FileField(blank=True, null=True, upload_to='Vendor_products')),
                ('complete', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='vendor_Detail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Orgnization_Name', models.CharField(max_length=255, null=True)),
                ('Full_Name', models.CharField(max_length=255, null=True)),
                ('Phone', models.CharField(max_length=255, null=True)),
                ('Address', models.CharField(max_length=255, null=True)),
                ('Pincode', models.IntegerField(blank=True, null=True)),
                ('State', models.CharField(max_length=30, null=True)),
                ('City', models.CharField(max_length=20, null=True)),
                ('GST_IN', models.CharField(max_length=20, null=True)),
                ('License_Number', models.CharField(max_length=20, null=True)),
                ('Document', models.FileField(blank=True, null=True, upload_to='Vendors_Details/Documents', validators=[django.core.validators.FileExtensionValidator(['pdf'])])),
                ('Banking_Name', models.CharField(max_length=255)),
                ('Account_Number', models.CharField(max_length=255)),
                ('IFSC', models.CharField(max_length=255)),
                ('Branch', models.CharField(max_length=255)),
                ('Cheque', models.FileField(upload_to='Vendor/Bank_Details')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('status', models.BooleanField(default=False)),
                ('vendor_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': "Vendor's Details",
            },
        ),
        migrations.CreateModel(
            name='preorder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_image', models.ImageField(blank=True, null=True, upload_to='Customer/Product_Requirement_Image')),
                ('name', models.CharField(max_length=255, verbose_name='Product')),
                ('category', models.CharField(max_length=25)),
                ('brand', models.CharField(max_length=25)),
                ('price', models.CharField(max_length=25)),
                ('mrp', models.CharField(max_length=25)),
                ('quantity', models.PositiveIntegerField()),
                ('step_up_quantity', models.CharField(max_length=8)),
                ('product_ref_no', models.CharField(blank=True, default='None', max_length=255, null=True)),
                ('description', models.TextField()),
                ('slug', models.CharField(max_length=255, unique=True)),
                ('complete', models.BooleanField(default=False)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Customer_Requirement',
            fields=[
                ('product_id', models.AutoField(primary_key=True, serialize=False)),
                ('product_image_1', models.ImageField(blank=True, null=True, upload_to='Customer/Product_Requirement_Image')),
                ('name', models.CharField(max_length=255, verbose_name='Product')),
                ('category', models.CharField(max_length=25)),
                ('brand', models.CharField(max_length=25)),
                ('quantity', models.PositiveIntegerField()),
                ('start_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('mrp', models.DecimalField(decimal_places=2, max_digits=10)),
                ('lowest_bid', models.DecimalField(decimal_places=2, max_digits=10)),
                ('description', models.TextField()),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('Exp_delivery_days', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(90)])),
                ('delivery_contact', models.IntegerField(validators=[bid.models.phone_validator])),
                ('delivery_address', models.TextField(default=None)),
                ('delivery_pincode', models.IntegerField(validators=[bid.models.pincode_validator])),
                ('product_ref_no', models.CharField(blank=True, default='None', max_length=255, null=True)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('bidding_expiry', models.DateTimeField(blank=True, null=True)),
                ('requirement_status', models.CharField(choices=[('APPROVED', 'APPROVED'), ('PENDING', 'PENDING'), ('REJECTED', 'REJECTED'), ('EXPIRED', 'EXPIRED'), ('DISABLED', 'DISABLED'), ('ON HOLD', 'ON HOLD')], default='PENDING', max_length=255)),
                ('amount', models.FloatField(verbose_name='Amount')),
                ('payment_id', models.CharField(max_length=36, verbose_name='Payment ID')),
                ('provider_order_id', models.CharField(max_length=40, verbose_name='Order ID')),
                ('signature_id', models.CharField(max_length=128, verbose_name='Signature ID')),
                ('PaymentStatus', models.CharField(choices=[('SUCCESS', 'SUCCESS'), ('FAILURE', 'FAILURE'), ('PENDING', 'PENDING')], default='PENDING', max_length=255)),
                ('Ordered', models.CharField(choices=[('YES', 'YES'), ('NO', 'NO')], default='NO', max_length=25)),
                ('From_Order4Sure', models.CharField(choices=[('YES', 'YES'), ('NO', 'NO')], default='NO', max_length=25)),
                ('complete', models.BooleanField(default=False)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': "Customer's Requirements",
            },
        ),
        migrations.CreateModel(
            name='customer_Detail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Orgnization_Name', models.CharField(max_length=255, null=True)),
                ('Full_Name', models.CharField(max_length=255, null=True)),
                ('Phone', models.CharField(max_length=255, null=True)),
                ('Address', models.CharField(max_length=255, null=True)),
                ('Pincode', models.IntegerField(blank=True, null=True)),
                ('State', models.CharField(max_length=30, null=True)),
                ('City', models.CharField(max_length=20, null=True)),
                ('GST_IN', models.CharField(blank=True, max_length=20, null=True)),
                ('License_Number', models.CharField(blank=True, max_length=20, null=True)),
                ('Document', models.FileField(blank=True, null=True, upload_to='Customers_Details/Documents')),
                ('status', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('customer_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': "Customer's Details",
            },
        ),
    ]
